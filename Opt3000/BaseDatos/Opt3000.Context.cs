//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Opt3000.BaseDatos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class Opt3000Entities : DbContext
    {
        public Opt3000Entities()
            : base("name=Opt3000Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<ADAPTACION_LENTES> ADAPTACION_LENTES { get; set; }
        public DbSet<AGENDA> AGENDA { get; set; }
        public DbSet<ATENCION> ATENCION { get; set; }
        public DbSet<CAJA> CAJA { get; set; }
        public DbSet<CIE_10> CIE_10 { get; set; }
        public DbSet<CLIENTE> CLIENTE { get; set; }
        public DbSet<CONSULTORIO> CONSULTORIO { get; set; }
        public DbSet<CONVENIO> CONVENIO { get; set; }
        public DbSet<CUENTA_PACIENTE> CUENTA_PACIENTE { get; set; }
        public DbSet<DETALLE> DETALLE { get; set; }
        public DbSet<DIAS_SEMANA> DIAS_SEMANA { get; set; }
        public DbSet<HONRARIOATENCION> HONRARIOATENCION { get; set; }
        public DbSet<LENTE_DEFINITIVO> LENTE_DEFINITIVO { get; set; }
        public DbSet<LENTE_PRUEBA> LENTE_PRUEBA { get; set; }
        public DbSet<MEDICO> MEDICO { get; set; }
        public DbSet<NIVEL_USUARIO> NIVEL_USUARIO { get; set; }
        public DbSet<OFTALMOLOGIA> OFTALMOLOGIA { get; set; }
        public DbSet<PACIENTE> PACIENTE { get; set; }
        public DbSet<PRODUCTO> PRODUCTO { get; set; }
        public DbSet<RETINOSCOPIA_DILATADA> RETINOSCOPIA_DILATADA { get; set; }
        public DbSet<RX_EN_USO> RX_EN_USO { get; set; }
        public DbSet<RX_FINAL> RX_FINAL { get; set; }
        public DbSet<SUCURSAL> SUCURSAL { get; set; }
        public DbSet<TIPO_LENTECONTACTO> TIPO_LENTECONTACTO { get; set; }
        public DbSet<USUARIO> USUARIO { get; set; }
        public DbSet<PARAMETRO> PARAMETRO { get; set; }
        public DbSet<ANTICIPOS> ANTICIPOS { get; set; }
        public DbSet<FACTURA> FACTURA { get; set; }
        public DbSet<FACTURA_PAGO> FACTURA_PAGO { get; set; }
        public DbSet<FORMA_PAGO> FORMA_PAGO { get; set; }
        public DbSet<TIEMPODIFERIDO> TIEMPODIFERIDO { get; set; }
        public DbSet<EMPRESA> EMPRESA { get; set; }
        public DbSet<ESPECIALIDAD> ESPECIALIDAD { get; set; }
        public DbSet<DETALLE_ORDEN> DETALLE_ORDEN { get; set; }
        public DbSet<ORDEN_PEDIDO> ORDEN_PEDIDO { get; set; }
        public DbSet<CONTADOR_PRODUCTOS> CONTADOR_PRODUCTOS { get; set; }
        public DbSet<TIPO_PRODUCTO> TIPO_PRODUCTO { get; set; }
        public DbSet<ORDEN_LENTES_CONTACTO> ORDEN_LENTES_CONTACTO { get; set; }
        public DbSet<ORDEN_LENTES_PROGESIVOS> ORDEN_LENTES_PROGESIVOS { get; set; }
        public DbSet<Orden1> Orden1 { get; set; }
        public DbSet<BANCOS> BANCOS { get; set; }
        public DbSet<LENTES_CONTACTO> LENTES_CONTACTO { get; set; }
        public DbSet<GARANTIA> GARANTIA { get; set; }
        public DbSet<vAtenciones> vAtenciones { get; set; }
        public DbSet<ORDEN_VISION_CERCA> ORDEN_VISION_CERCA { get; set; }
        public DbSet<ORDEN_LEJANA> ORDEN_LEJANA { get; set; }
        public DbSet<ORDEN_LENTESBLANDOS> ORDEN_LENTESBLANDOS { get; set; }
        public DbSet<visFactura> visFactura { get; set; }
        public DbSet<vAtenciones1> vAtenciones1 { get; set; }
    
        public virtual int sp_DuplicaFactura(Nullable<long> atencion, Nullable<decimal> valor1, Nullable<decimal> valor2, Nullable<decimal> iva)
        {
            var atencionParameter = atencion.HasValue ?
                new ObjectParameter("atencion", atencion) :
                new ObjectParameter("atencion", typeof(long));
    
            var valor1Parameter = valor1.HasValue ?
                new ObjectParameter("valor1", valor1) :
                new ObjectParameter("valor1", typeof(decimal));
    
            var valor2Parameter = valor2.HasValue ?
                new ObjectParameter("valor2", valor2) :
                new ObjectParameter("valor2", typeof(decimal));
    
            var ivaParameter = iva.HasValue ?
                new ObjectParameter("iva", iva) :
                new ObjectParameter("iva", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DuplicaFactura", atencionParameter, valor1Parameter, valor2Parameter, ivaParameter);
        }
    }
}
